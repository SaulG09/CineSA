package cinesa;

import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Image;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfDocument;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.mysql.jdbc.PreparedStatement;
import java.awt.AWTException;
import java.awt.BasicStroke;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridLayout;
import javax.swing.ImageIcon;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Robot;
import java.awt.Shape;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.ButtonModel;
import javax.swing.ComboBoxModel;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author saulg
 */
public class Reportes extends javax.swing.JFrame {

    /**
     * Creates new form Cine
     */
    Controlador con = new Controlador();
    PreparedStatement ps;
    Hora hr = new Hora();
    Font f = new Font("Franklin Gothic Demi Cond", Font.PLAIN, 18);
    boolean xee = false;
    String s;
    String t;
    String u;
    String v;
    String w;
    DefaultTableModel model = new DefaultTableModel();
    DefaultTableModel model2 = new DefaultTableModel();
    String tb[][];
    int ton = 0;

    public Reportes(String user, String password) throws SQLException {
        setUndecorated(true);
        setSize(1200, 690);
        Shape forma = new RoundRectangle2D.Double(0, -0, getBounds().width, getBounds().height, 30, 30);
        setShape(forma);
        //this.pack();
        setLocationRelativeTo(null);
        setVisible(true);
        initComponents();
        jLabel1.setText("A");
        hr.setTexto(jLabel7);
        hr.start();
        jLabel1.setText("Administrador: " + user);
        s = user;
        t = password;
        jComboBox5.setMaximumRowCount(10);
        jComboBox6.setMaximumRowCount(10);

        vendedores();
        peliculas();

    }

    private Reportes() {

    }

    public void vendedores() {
        jComboBox5.addItem("Cualquiera");
        try {
            ps = (PreparedStatement) con.getConect().prepareStatement("SELECT usuario FROM cuentas WHERE nivel = 'V'");
            ResultSet sr = ps.executeQuery();
            while (sr.next()) {
                String v = sr.getString("usuario");
                jComboBox5.addItem(v);
            }
        } catch (SQLException ex) {

        }
    }

    public void peliculas() {
        jComboBox6.addItem("Cualquiera");
        try {
            ps = (PreparedStatement) con.getConect().prepareStatement("SELECT DISTINCT nombre FROM pelicula");
            ResultSet sr = ps.executeQuery();
            while (sr.next()) {
                String v = sr.getString("nombre");
                jComboBox6.addItem(v);
            }
        } catch (SQLException ex) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();

        jLabel5.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Menú de operaciones");

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Disponible.png"))); // NOI18N

        jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Disponible.png"))); // NOI18N

        jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Disponible.png"))); // NOI18N

        jLabel37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Disponible.png"))); // NOI18N

        jLabel38.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Disponible.png"))); // NOI18N

        jLabel39.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Disponible.png"))); // NOI18N

        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Disponible.png"))); // NOI18N

        jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Disponible.png"))); // NOI18N

        jLabel42.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Disponible.png"))); // NOI18N

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Fondo.png"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1037, 495));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setMaximumSize(new java.awt.Dimension(1200, 690));
        jPanel1.setMinimumSize(new java.awt.Dimension(1200, 690));
        jPanel1.setPreferredSize(new java.awt.Dimension(1200, 690));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel1MouseMoved(evt);
            }
        });
        jPanel1.setLayout(null);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/CerrarP.png"))); // NOI18N
        jButton2.setToolTipText("Cerrar Aplicación");
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(1100, 10, 80, 70);

        jLabel7.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel1.add(jLabel7);
        jLabel7.setBounds(340, 0, 310, 40);

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(jLabel1);
        jLabel1.setBounds(660, 0, 240, 40);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/FondoSup.png"))); // NOI18N
        jPanel1.add(jLabel3);
        jLabel3.setBounds(280, -530, 680, 580);

        jLabel12.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 1, 36)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Reportes de ventas");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(90, 100, 1010, 40);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Boletos.png"))); // NOI18N
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel1.add(jLabel2);
        jLabel2.setBounds(70, 90, 1090, 70);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RegresarB.png"))); // NOI18N
        jButton8.setBorderPainted(false);
        jButton8.setContentAreaFilled(false);
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8);
        jButton8.setBounds(58, 10, 90, 70);

        jLabel14.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel14.setText("a");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(590, 360, 20, 30);

        jComboBox5.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 18)); // NOI18N
        jComboBox5.setForeground(new java.awt.Color(51, 51, 51));
        jComboBox5.setBorder(null);
        jComboBox5.setLightWeightPopupEnabled(false);
        jComboBox5.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jComboBox5InputMethodTextChanged(evt);
            }
        });
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });
        jComboBox5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox5KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jComboBox5KeyReleased(evt);
            }
        });
        jPanel1.add(jComboBox5);
        jComboBox5.setBounds(250, 220, 210, 40);

        jLabel16.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(153, 255, 204));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel16.setText("Parámetros de la venta");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(90, 170, 250, 30);

        jComboBox6.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 18)); // NOI18N
        jComboBox6.setForeground(new java.awt.Color(51, 51, 51));
        jComboBox6.setBorder(null);
        jComboBox6.setLightWeightPopupEnabled(false);
        jComboBox6.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jComboBox6InputMethodTextChanged(evt);
            }
        });
        jComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox6ActionPerformed(evt);
            }
        });
        jComboBox6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox6KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jComboBox6KeyReleased(evt);
            }
        });
        jPanel1.add(jComboBox6);
        jComboBox6.setBounds(650, 220, 250, 40);

        jLabel17.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel17.setText("Nombre de la película:");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(470, 220, 190, 40);

        jLabel18.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel18.setText("Rango de fecha:");
        jPanel1.add(jLabel18);
        jLabel18.setBounds(540, 520, 140, 30);

        jLabel19.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Rango de ganancias: ");
        jPanel1.add(jLabel19);
        jLabel19.setBounds(500, 300, 190, 30);

        jTextField5.setBackground(new java.awt.Color(242, 242, 242));
        jTextField5.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 18)); // NOI18N
        jTextField5.setForeground(new java.awt.Color(51, 51, 51));
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField5.setBorder(null);
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField5KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField5KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField5);
        jTextField5.setBounds(640, 350, 250, 40);

        jLabel20.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel20.setText("a");
        jPanel1.add(jLabel20);
        jLabel20.setBounds(590, 580, 20, 30);

        jLabel21.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Rango de hora: ");
        jPanel1.add(jLabel21);
        jLabel21.setBounds(540, 410, 130, 30);

        jTextField9.setBackground(new java.awt.Color(242, 242, 242));
        jTextField9.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 18)); // NOI18N
        jTextField9.setForeground(new java.awt.Color(51, 51, 51));
        jTextField9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField9.setBorder(null);
        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });
        jTextField9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField9KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField9KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField9KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField9);
        jTextField9.setBounds(640, 460, 250, 40);

        jTextField10.setBackground(new java.awt.Color(242, 242, 242));
        jTextField10.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 18)); // NOI18N
        jTextField10.setForeground(new java.awt.Color(51, 51, 51));
        jTextField10.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField10.setBorder(null);
        jTextField10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField10ActionPerformed(evt);
            }
        });
        jTextField10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField10KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField10KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField10KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField10);
        jTextField10.setBounds(310, 350, 250, 40);

        jTextField11.setBackground(new java.awt.Color(242, 242, 242));
        jTextField11.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 18)); // NOI18N
        jTextField11.setForeground(new java.awt.Color(51, 51, 51));
        jTextField11.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField11.setBorder(null);
        jTextField11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11ActionPerformed(evt);
            }
        });
        jTextField11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField11KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField11KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField11KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField11);
        jTextField11.setBounds(640, 580, 250, 40);

        jTextField12.setBackground(new java.awt.Color(242, 242, 242));
        jTextField12.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 18)); // NOI18N
        jTextField12.setForeground(new java.awt.Color(51, 51, 51));
        jTextField12.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField12.setBorder(null);
        jTextField12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField12ActionPerformed(evt);
            }
        });
        jTextField12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField12KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField12KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField12KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField12);
        jTextField12.setBounds(310, 460, 250, 40);

        jTextField13.setBackground(new java.awt.Color(242, 242, 242));
        jTextField13.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 18)); // NOI18N
        jTextField13.setForeground(new java.awt.Color(51, 51, 51));
        jTextField13.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField13.setBorder(null);
        jTextField13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });
        jTextField13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField13KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField13KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField13KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField13);
        jTextField13.setBounds(310, 580, 250, 40);

        jLabel22.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel22.setText("a");
        jPanel1.add(jLabel22);
        jLabel22.setBounds(590, 460, 20, 30);

        jLabel23.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel23.setText("Venta realizada por:");
        jPanel1.add(jLabel23);
        jLabel23.setBounds(90, 220, 190, 40);

        jLabel11.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Generar");
        jLabel11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(jLabel11);
        jLabel11.setBounds(970, 230, 160, 40);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Boton2.png"))); // NOI18N
        jButton6.setBorderPainted(false);
        jButton6.setContentAreaFilled(false);
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jButton6MouseMoved(evt);
            }
        });
        jButton6.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jButton6MouseWheelMoved(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);
        jButton6.setBounds(970, 210, 160, 90);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Fondo.png"))); // NOI18N
        jPanel1.add(jLabel13);
        jLabel13.setBounds(-600, 440, 680, 600);

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Fondo.png"))); // NOI18N
        jPanel1.add(jLabel24);
        jLabel24.setBounds(1110, 450, 680, 600);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BarraGrisS.png"))); // NOI18N
        jPanel1.add(jLabel8);
        jLabel8.setBounds(620, 570, 286, 60);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BarraGrisS.png"))); // NOI18N
        jPanel1.add(jLabel9);
        jLabel9.setBounds(620, 450, 286, 60);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BarraGrisS.png"))); // NOI18N
        jPanel1.add(jLabel10);
        jLabel10.setBounds(290, 340, 286, 60);

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BarraGrisS.png"))); // NOI18N
        jPanel1.add(jLabel25);
        jLabel25.setBounds(290, 450, 286, 60);

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BarraGrisS.png"))); // NOI18N
        jPanel1.add(jLabel26);
        jLabel26.setBounds(620, 340, 286, 60);

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BarraGrisS.png"))); // NOI18N
        jPanel1.add(jLabel27);
        jLabel27.setBounds(290, 570, 286, 60);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jPanel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseMoved
        // TODO add your handling code here:
        jButton6.setIcon(new ImageIcon(getClass().getResource("/Images/Boton2.png")));


    }//GEN-LAST:event_jPanel1MouseMoved

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        Estadísticas ad;
        try {
            ad = new Estadísticas(s, t);
            ad.show();
            dispose();
        } catch (Exception ex) {
            Logger.getLogger(Estadísticas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jComboBox5InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jComboBox5InputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5InputMethodTextChanged

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jComboBox5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox5KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5KeyPressed

    private void jComboBox5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox5KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5KeyReleased

    private void jComboBox6InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jComboBox6InputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox6InputMethodTextChanged

    private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox6ActionPerformed

    private void jComboBox6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox6KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox6KeyPressed

    private void jComboBox6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox6KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox6KeyReleased

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5KeyPressed

    private void jTextField5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5KeyReleased

    private void jTextField5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5KeyTyped

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void jTextField9KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField9KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9KeyPressed

    private void jTextField9KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField9KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9KeyReleased

    private void jTextField9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField9KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9KeyTyped

    private void jTextField10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField10ActionPerformed

    private void jTextField10KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField10KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField10KeyPressed

    private void jTextField10KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField10KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField10KeyReleased

    private void jTextField10KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField10KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField10KeyTyped

    private void jTextField11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField11ActionPerformed

    private void jTextField11KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField11KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField11KeyPressed

    private void jTextField11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField11KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField11KeyReleased

    private void jTextField11KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField11KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField11KeyTyped

    private void jTextField12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField12ActionPerformed

    private void jTextField12KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField12KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField12KeyPressed

    private void jTextField12KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField12KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField12KeyReleased

    private void jTextField12KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField12KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField12KeyTyped

    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13ActionPerformed

    private void jTextField13KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField13KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13KeyPressed

    private void jTextField13KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField13KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13KeyReleased

    private void jTextField13KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField13KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13KeyTyped

    private void jButton6MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseMoved
        // TODO add your handling code here:
        jButton6.setIcon(new ImageIcon(getClass().getResource("/Images/Boton1.png")));
    }//GEN-LAST:event_jButton6MouseMoved

    private void jButton6MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jButton6MouseWheelMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6MouseWheelMoved

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        //Consultas
        String gananciaMin = jTextField10.getText();
        String gananciaMax = jTextField5.getText();
        String fechaMin = jTextField13.getText();
        String fechaMax = jTextField11.getText();
        String horaMin = jTextField12.getText();
        String horaMax = jTextField9.getText();
        String consulta = "SELECT venta.ID AS id_venta, venta.cliente AS nombre_cliente, venta.vendedor AS nombre_vendedor, venta.fechaCompra AS fecha_de_compra, venta.hora AS hora_de_compra, pelicula.nombre AS pelicula, funcion.IDFuncion AS funcion, COUNT(boletos.IDBoletos) AS numero_de_boletos, venta.total AS total_de_la_venta FROM venta INNER JOIN cuentas ON venta.vendedor = cuentas.usuario INNER JOIN boletos ON venta.ID = boletos.IDVenta INNER JOIN funcion ON boletos.IDFuncion = funcion.IDFuncion INNER JOIN pelicula ON funcion.IDPelicula = pelicula.IDPelicula GROUP BY venta.ID, venta.vendedor, venta.fechaCompra, venta.hora, pelicula.nombre, funcion.IDFuncion, venta.total";

        if (!gananciaMin.isEmpty()) {
            consulta += " HAVING total_de_la_venta >= " + gananciaMin;
        }

        if (!gananciaMax.isEmpty()) {
            if (!consulta.contains("HAVING")) {
                consulta += " HAVING ";
            } else {
                consulta += " AND ";
            }
            consulta += "total_de_la_venta <= " + gananciaMax;
        }

        if (!fechaMin.isEmpty()) {
            if (!consulta.contains("HAVING")) {
                consulta += " HAVING ";
            } else {
                consulta += " AND ";
            }
            consulta += "fecha_de_compra >= '" + fechaMin + "'";
        }

        if (!fechaMax.isEmpty()) {
            if (!consulta.contains("HAVING")) {
                consulta += " HAVING ";
            } else {
                consulta += " AND ";
            }
            consulta += "fecha_de_compra <= '" + fechaMax + "'";
        }

        if (!horaMin.isEmpty()) {
            if (!consulta.contains("HAVING")) {
                consulta += " HAVING ";
            } else {
                consulta += " AND ";
            }
            consulta += "hora_de_compra >= '" + horaMin + "'";
        }

        if (!horaMax.isEmpty()) {
            if (!consulta.contains("HAVING")) {
                consulta += " HAVING ";
            } else {
                consulta += " AND ";
            }
            consulta += "hora_de_compra <= '" + horaMax + "'";
        }

        if (jComboBox6.getSelectedIndex() != -1) {
            String peliculaSeleccionada = jComboBox6.getSelectedItem().toString();
            if (!peliculaSeleccionada.isEmpty() && !peliculaSeleccionada.equalsIgnoreCase("Cualquiera")) {
                if (!consulta.contains("HAVING")) {
                    consulta += " HAVING ";
                } else {
                    consulta += " AND ";
                }
                consulta += "pelicula.nombre = '" + peliculaSeleccionada + "'";
            }
        }

// Condición para filtrar por el nombre del vendedor
        if (jComboBox5.getSelectedIndex() != -1) {
            String vendedorSeleccionado = jComboBox5.getSelectedItem().toString();
            if (!vendedorSeleccionado.isEmpty() && !vendedorSeleccionado.equalsIgnoreCase("Cualquiera")) {
                if (!consulta.contains("HAVING")) {
                    consulta += " HAVING ";
                } else {
                    consulta += " AND ";
                }
                consulta += "venta.vendedor = '" + vendedorSeleccionado + "'";
            }
        }

        consulta += ";";
        System.out.println(consulta);
        String timeStamp = new SimpleDateFormat("dd/MM/YYYY").format(Calendar.getInstance().getTime());
        String timeStamp2 = new SimpleDateFormat("HH:mm:ss").format(Calendar.getInstance().getTime());
        String dest = "src/Reportes/Reporte_" + timeStamp.replace("/", "") + timeStamp2.replace(":", "-") + ".pdf";
        // Ruta de la imagen
        String imagePath = "src/Images/Logo.png";
        String imagePath2 = "src/Images/Fondo.png";

        
        
        
        // Crear un documento
        Document document = new Document(PageSize.A4);

        try {
            // Crear un escritor de PDF
            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(dest));
            PdfPTable table = new PdfPTable(4);
            float totalWidth = document.getPageSize().getWidth() - 400; // Ancho total de la tabla en puntos

            document.open();

            Image img = Image.getInstance(imagePath);
            img.scalePercent(25, 25);
            img.setAbsolutePosition(20, document.getPageSize().getHeight() - img.getScaledHeight() - 20);
            writer.getDirectContentUnder().addImage(img);
            document.add(img);

            img = Image.getInstance(imagePath2);
            img.scalePercent(150, 4);
            img.setAbsolutePosition(-80, document.getPageSize().getHeight() - img.getScaledHeight() - 178);
            writer.getDirectContentUnder().addImage(img);
            document.add(img);

            Paragraph pe = new Paragraph("Cine S.A.", FontFactory.getFont("Franklin Gothic Demi Cond", 16, Font.BOLD, new BaseColor(0, 0, 0)));
            pe.setAlignment(Element.ALIGN_RIGHT);
            pe.setSpacingAfter(5f);
            document.add(pe);
            pe = new Paragraph("Toluca, Estado de México", FontFactory.getFont("Franklin Gothic Demi Cond", 12, Font.PLAIN, new BaseColor(0, 0, 0)));
            pe.setAlignment(Element.ALIGN_RIGHT);
            document.add(pe);
            pe = new Paragraph("Sistema de reporte de ventas", FontFactory.getFont("Franklin Gothic Demi Cond", 12, Font.PLAIN, new BaseColor(0, 0, 0)));
            pe.setAlignment(Element.ALIGN_RIGHT);
            document.add(pe);
            pe = new Paragraph("\n", FontFactory.getFont("Franklin Gothic Demi Cond", 12, Font.PLAIN, new BaseColor(0, 0, 0)));
            pe.setAlignment(Element.ALIGN_RIGHT);
            document.add(pe);

            // Crear la tabla con 3 columnas
            table.setHorizontalAlignment(com.itextpdf.text.Element.ALIGN_RIGHT);
            PdfPCell cell = new PdfPCell(new Phrase("Número de reporte"));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Número de reporte", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(0, 0, 0))));
            cell.setBackgroundColor(new BaseColor(111, 246, 207));
            cell.setBorderColor(new BaseColor(111, 246, 207));
            table.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Administrador a cargo", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(0, 0, 0))));
            cell.setBackgroundColor(new BaseColor(149, 246, 224));
            cell.setBorderColor(new BaseColor(149, 246, 224));

            table.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Fecha", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(0, 0, 0))));
            cell.setBackgroundColor(new BaseColor(184, 246, 230));
            cell.setBorderColor(new BaseColor(184, 246, 230));
            table.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Hora", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(0, 0, 0))));
            cell.setBackgroundColor(new BaseColor(200, 246, 235));
            cell.setBorderColor(new BaseColor(200, 246, 235));
            table.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("1", FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
            cell.setBackgroundColor(new BaseColor(255, 255, 255));
            cell.setBorderColor(new BaseColor(255, 255, 255));
            table.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase(s, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
            cell.setBackgroundColor(new BaseColor(255, 255, 255));
            table.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase(timeStamp, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
            cell.setBackgroundColor(new BaseColor(255, 255, 255));
            table.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase(timeStamp2, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
            cell.setBackgroundColor(new BaseColor(255, 255, 255));
            table.addCell(cell);

            //table.setLockedWidth(true);
            table.setWidthPercentage(70);
            //table.writeSelectedRows(0, -1, xPosTable, 0, writer.getDirectContent());
            document.add(table);

            pe = new Paragraph("\nInformación relacionada a las ventas en Cine S.A", FontFactory.getFont("Franklin Gothic Demi Cond", 12, Font.BOLD, new BaseColor(0, 0, 0)));
            pe.setAlignment(Element.ALIGN_JUSTIFIED);
            document.add(pe);

            pe = new Paragraph("\nFiltros aplicados", FontFactory.getFont("Franklin Gothic Demi Cond", 12, Font.BOLD, new BaseColor(0, 0, 0)));
            pe.setAlignment(Element.ALIGN_CENTER);
            pe.setSpacingAfter(5f);
            document.add(pe);

            PdfPTable table2 = new PdfPTable(2);
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Nombre de usuario del vendedor", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(0, 0, 0))));
            cell.setBackgroundColor(new BaseColor(171, 191, 229));
            cell.setBorderColor(new BaseColor(171, 191, 229));
            table2.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Nombre de la película", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(0, 0, 0))));
            cell.setBackgroundColor(new BaseColor(162, 171, 242));
            cell.setBorderColor(new BaseColor(162, 171, 242));
            table2.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase((String) jComboBox5.getSelectedItem(), FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
            cell.setBackgroundColor(new BaseColor(255, 255, 255));
            cell.setBorderColor(BaseColor.WHITE);
            table2.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase((String) jComboBox6.getSelectedItem(), FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
            cell.setBackgroundColor(new BaseColor(255, 255, 255));
            cell.setBorderColor(BaseColor.WHITE);
            table2.addCell(cell);
            document.add(table2);

            PdfPTable table3 = new PdfPTable(3);
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Ganancias", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(0, 0, 0))));
            cell.setBackgroundColor(new BaseColor(153, 153, 255));
            cell.setBorderColor(new BaseColor(153, 153, 255));
            table3.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Fecha", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(0, 0, 0))));
            cell.setBackgroundColor(new BaseColor(118, 118, 196));
            cell.setBorderColor(new BaseColor(118, 118, 196));
            table3.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Hora", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(0, 0, 0))));
            cell.setBackgroundColor(new BaseColor(98, 98, 163));
            cell.setBorderColor(new BaseColor(98, 98, 163));
            table3.addCell(cell);

            String rang1 = "";
            if ("".equals(gananciaMax) && "".equals(gananciaMin)) {
                rang1 = "Todas";
            } else {
                if (!"".equals(gananciaMin) && "".equals(gananciaMax)) {
                    rang1 = "Despues de " + gananciaMin;
                } else {
                    if ("".equals(gananciaMin) && !"".equals(gananciaMax)) {
                        rang1 = "Antes de " + gananciaMax;
                    } else {
                        if (!"".equals(gananciaMin) && !"".equals(gananciaMax)) {
                            rang1 = "De " + gananciaMin + " a " + gananciaMax;
                        }
                    }

                }
            }

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase(rang1, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
            cell.setBackgroundColor(new BaseColor(255, 255, 255));
            cell.setBorderColor(BaseColor.WHITE);
            table3.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            String rang2 = "";
            if ("".equals(fechaMax) && "".equals(fechaMin)) {
                rang2 = "Todas";
            } else {
                if (!"".equals(fechaMin) && "".equals(fechaMax)) {
                    rang2 = "Despues de " + fechaMin;
                } else {
                    if ("".equals(fechaMin) && !"".equals(fechaMax)) {
                        rang2 = "Antes de " + fechaMax;
                    } else {
                        if (!"".equals(fechaMin) && !"".equals(fechaMax)) {
                            rang2 = "De " + fechaMin + " a " + fechaMax;
                        }
                    }

                }
            }
            cell.setPhrase(new Phrase(rang2, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
            cell.setBackgroundColor(new BaseColor(255, 255, 255));
            cell.setBorderColor(BaseColor.WHITE);
            table3.addCell(cell);

            String rang3 = "";
            if ("".equals(horaMax) && "".equals(horaMin)) {
                rang3 = "Todas";
            } else {
                if (!"".equals(horaMin) && "".equals(horaMax)) {
                    rang3 = "Despues de " + horaMin;
                } else {
                    if ("".equals(horaMin) && !"".equals(horaMax)) {
                        rang3 = "Antes de " + horaMax;
                    } else {
                        if (!"".equals(horaMin) && !"".equals(horaMax)) {
                            rang3 = "De " + horaMin + " a " + horaMax;
                        }
                    }

                }
            }

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase(rang3, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
            cell.setBackgroundColor(new BaseColor(255, 255, 255));
            cell.setBorderColor(BaseColor.WHITE);
            table3.addCell(cell);

            document.add(table3);

            pe = new Paragraph("\nRegistros de ventas\n", FontFactory.getFont("Franklin Gothic Demi Cond", 12, Font.BOLD, new BaseColor(0, 0, 0)));
            pe.setAlignment(Element.ALIGN_JUSTIFIED);
            pe.setSpacingAfter(5f);
            document.add(pe);

            PdfPTable table4 = new PdfPTable(10);
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("No.", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
            cell.setBackgroundColor(new BaseColor(51, 51, 51));
            cell.setBorderColor(new BaseColor(51, 51, 51));
            table4.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("ID Venta", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
            cell.setBackgroundColor(new BaseColor(51, 51, 51));
            cell.setBorderColor(new BaseColor(51, 51, 51));
            table4.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Cliente", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
            cell.setBackgroundColor(new BaseColor(51, 51, 51));
            cell.setBorderColor(new BaseColor(51, 51, 51));
            table4.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Vendedor", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
            cell.setBackgroundColor(new BaseColor(51, 51, 51));
            cell.setBorderColor(new BaseColor(51, 51, 51));
            table4.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Fecha", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
            cell.setBackgroundColor(new BaseColor(51, 51, 51));
            cell.setBorderColor(new BaseColor(51, 51, 51));
            table4.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Hora", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
            cell.setBackgroundColor(new BaseColor(51, 51, 51));
            cell.setBorderColor(new BaseColor(51, 51, 51));
            table4.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Pelicula", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
            cell.setBackgroundColor(new BaseColor(51, 51, 51));
            cell.setBorderColor(new BaseColor(51, 51, 51));
            table4.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Función", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
            cell.setBackgroundColor(new BaseColor(51, 51, 51));
            cell.setBorderColor(new BaseColor(51, 51, 51));
            table4.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Núm. Boletos", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
            cell.setBackgroundColor(new BaseColor(51, 51, 51));
            cell.setBorderColor(new BaseColor(51, 51, 51));
            table4.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Total", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
            cell.setBackgroundColor(new BaseColor(51, 51, 51));
            cell.setBorderColor(new BaseColor(51, 51, 51));
            table4.addCell(cell);
            table4.setWidthPercentage(110);

            String tbb = "";
            boolean reg = true;
            String tv = "";
            int numB = 0;
            float totalV = 0;
            try {
                int numRegistro = 1;
                ps = (PreparedStatement) con.getConect().prepareStatement(consulta);
                ResultSet sr = ps.executeQuery();

                while (sr.next()) {
                    String idv = sr.getString("id_venta");
                    String ncl = sr.getString("nombre_cliente");
                    String nven = sr.getString("nombre_vendedor");
                    String fec = sr.getString("fecha_de_compra");
                    String hora = sr.getString("hora_de_compra");
                    String pel = sr.getString("pelicula");
                    String idf = sr.getString("funcion");
                    String bol = sr.getString("numero_de_boletos");
                    String tot = sr.getString("total_de_la_venta");
                    numB += Integer.parseInt(bol);
                    totalV += Float.parseFloat(tot);
                    reg = false;
                    System.out.println(numRegistro + idv + ncl + nven + fec + hora + pel + idf + bol + tot);

                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cell.setPhrase(new Phrase(String.valueOf(numRegistro), FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                    cell.setBackgroundColor(new BaseColor(255, 255, 255));
                    cell.setBorderColor(new BaseColor(255, 255, 255));
                    table4.addCell(cell);

                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cell.setPhrase(new Phrase(idv, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                    cell.setBackgroundColor(new BaseColor(255, 255, 255));
                    cell.setBorderColor(new BaseColor(255, 255, 255));
                    table4.addCell(cell);

                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cell.setPhrase(new Phrase(ncl, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                    cell.setBackgroundColor(new BaseColor(255, 255, 255));
                    cell.setBorderColor(new BaseColor(255, 255, 255));
                    table4.addCell(cell);

                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cell.setPhrase(new Phrase(nven, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                    cell.setBackgroundColor(new BaseColor(255, 255, 255));
                    cell.setBorderColor(new BaseColor(255, 255, 255));
                    table4.addCell(cell);

                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cell.setPhrase(new Phrase(fec, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                    cell.setBackgroundColor(new BaseColor(255, 255, 255));
                    cell.setBorderColor(new BaseColor(255, 255, 255));
                    table4.addCell(cell);

                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cell.setPhrase(new Phrase(hora, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                    cell.setBackgroundColor(new BaseColor(255, 255, 255));
                    cell.setBorderColor(new BaseColor(255, 255, 255));
                    table4.addCell(cell);

                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cell.setPhrase(new Phrase(pel, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                    cell.setBackgroundColor(new BaseColor(255, 255, 255));
                    cell.setBorderColor(new BaseColor(255, 255, 255));
                    table4.addCell(cell);

                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cell.setPhrase(new Phrase(idf, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                    cell.setBackgroundColor(new BaseColor(255, 255, 255));
                    cell.setBorderColor(new BaseColor(255, 255, 255));
                    table4.addCell(cell);

                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cell.setPhrase(new Phrase(bol, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                    cell.setBackgroundColor(new BaseColor(255, 255, 255));
                    cell.setBorderColor(new BaseColor(255, 255, 255));
                    table4.addCell(cell);

                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cell.setPhrase(new Phrase("$" + tot, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                    cell.setBackgroundColor(new BaseColor(255, 255, 255));
                    cell.setBorderColor(new BaseColor(255, 255, 255));
                    table4.addCell(cell);

                    numRegistro++;

                }
            } catch (SQLException ee) {
                System.out.println(ee);

            }

            document.add(table4);

            if (reg == false) {

                PdfPTable table5 = new PdfPTable(10);

                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell.setPhrase(new Phrase("", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
                cell.setBackgroundColor(new BaseColor(255, 255, 255));
                cell.setBorderColor(new BaseColor(255, 255, 255));
                table5.addCell(cell);

                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell.setPhrase(new Phrase("", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
                cell.setBackgroundColor(new BaseColor(255, 255, 255));
                cell.setBorderColor(new BaseColor(255, 255, 255));
                table5.addCell(cell);

                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell.setPhrase(new Phrase("", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
                cell.setBackgroundColor(new BaseColor(255, 255, 255));
                cell.setBorderColor(new BaseColor(255, 255, 255));
                table5.addCell(cell);

                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell.setPhrase(new Phrase("", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
                cell.setBackgroundColor(new BaseColor(255, 255, 255));
                cell.setBorderColor(new BaseColor(255, 255, 255));
                table5.addCell(cell);

                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell.setPhrase(new Phrase("", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
                cell.setBackgroundColor(new BaseColor(255, 255, 255));
                cell.setBorderColor(new BaseColor(255, 255, 255));
                table5.addCell(cell);

                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell.setPhrase(new Phrase("", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
                cell.setBackgroundColor(new BaseColor(255, 255, 255));
                cell.setBorderColor(new BaseColor(255, 255, 255));
                table5.addCell(cell);

                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell.setPhrase(new Phrase("", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
                cell.setBackgroundColor(new BaseColor(255, 255, 255));
                cell.setBorderColor(new BaseColor(255, 255, 255));
                table5.addCell(cell);

                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell.setPhrase(new Phrase("", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
                cell.setBackgroundColor(new BaseColor(255, 255, 255));
                cell.setBorderColor(new BaseColor(255, 255, 255));
                table5.addCell(cell);

                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell.setPhrase(new Phrase(String.valueOf(numB), FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
                cell.setBackgroundColor(new BaseColor(51, 51, 51));
                cell.setBorderColor(new BaseColor(51, 51, 51));
                table5.addCell(cell);

                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell.setPhrase(new Phrase("$" + String.valueOf(totalV), FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
                cell.setBackgroundColor(new BaseColor(51, 51, 51));
                cell.setBorderColor(new BaseColor(51, 51, 51));
                table5.addCell(cell);
                table5.setWidthPercentage(110);
                //table5.setHorizontalAlignment();
                document.add(table5);
            }

            pe = new Paragraph("\n", FontFactory.getFont("Franklin Gothic Demi Cond", 12, Font.BOLD, new BaseColor(0, 0, 0)));
            pe.setAlignment(Element.ALIGN_JUSTIFIED);
            pe.setSpacingAfter(5f);
            document.add(pe);

            img = Image.getInstance(imagePath2);
            img.scalePercent(350, 4);
            img.setAlignment(Image.ALIGN_CENTER);
            //img.setAbsolutePosition(-80, document.getPageSize().getHeight() - img.getScaledHeight() - 178);
            //writer.getDirectContentUnder().addImage(img);
            document.add(img);

            pe = new Paragraph("\nVentas por pelicula\n", FontFactory.getFont("Franklin Gothic Demi Cond", 12, Font.BOLD, new BaseColor(0, 0, 0)));
            pe.setAlignment(Element.ALIGN_JUSTIFIED);
            pe.setSpacingAfter(5f);
            document.add(pe);

            String consulta3 = "SELECT pelicula.nombre AS nombre_pelicula, funcion.IDFuncion AS id_funcion, COUNT(boletos.IDBoletos) AS total_boletos_vendidos, SUM(boletos.precio) AS ganancias_totales FROM venta INNER JOIN cuentas ON venta.vendedor = cuentas.usuario INNER JOIN boletos ON venta.ID = boletos.IDVenta INNER JOIN funcion ON boletos.IDFuncion = funcion.IDFuncion INNER JOIN pelicula ON funcion.IDPelicula = pelicula.IDPelicula GROUP BY pelicula.nombre, funcion.IDFuncion ORDER BY pelicula.nombre;";
            PdfPTable table6 = new PdfPTable(5);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("No.", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
            cell.setBackgroundColor(new BaseColor(51, 51, 51));
            cell.setBorderColor(new BaseColor(51, 51, 51));
            table6.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Pelicula", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
            cell.setBackgroundColor(new BaseColor(51, 51, 51));
            cell.setBorderColor(new BaseColor(51, 51, 51));
            table6.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Función", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
            cell.setBackgroundColor(new BaseColor(51, 51, 51));
            cell.setBorderColor(new BaseColor(51, 51, 51));
            table6.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Boletos vendidos", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
            cell.setBackgroundColor(new BaseColor(51, 51, 51));
            cell.setBorderColor(new BaseColor(51, 51, 51));
            table6.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Ganancias totales", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
            cell.setBackgroundColor(new BaseColor(51, 51, 51));
            cell.setBorderColor(new BaseColor(51, 51, 51));
            table6.addCell(cell);

            reg = true;
            numB = 0;
            totalV = 0;
            try {
                int numRegistro = 1;
                ps = (PreparedStatement) con.getConect().prepareStatement(consulta3);
                ResultSet sr = ps.executeQuery();

                while (sr.next()) {
                    String idv = sr.getString("nombre_pelicula");
                    String ncl = sr.getString("id_funcion");
                    String nven = sr.getString("total_boletos_vendidos");
                    String fec = sr.getString("ganancias_totales");
                    numB += Integer.parseInt(nven);
                    totalV += Float.parseFloat(fec);

                    reg = false;

                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cell.setPhrase(new Phrase(String.valueOf(numRegistro), FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                    cell.setBackgroundColor(new BaseColor(255, 255, 255));
                    cell.setBorderColor(new BaseColor(255, 255, 255));
                    table6.addCell(cell);

                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cell.setPhrase(new Phrase(idv, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                    cell.setBackgroundColor(new BaseColor(255, 255, 255));
                    cell.setBorderColor(new BaseColor(255, 255, 255));
                    table6.addCell(cell);

                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cell.setPhrase(new Phrase(ncl, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                    cell.setBackgroundColor(new BaseColor(255, 255, 255));
                    cell.setBorderColor(new BaseColor(255, 255, 255));
                    table6.addCell(cell);

                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cell.setPhrase(new Phrase(nven, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                    cell.setBackgroundColor(new BaseColor(255, 255, 255));
                    cell.setBorderColor(new BaseColor(255, 255, 255));
                    table6.addCell(cell);

                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cell.setPhrase(new Phrase("$" + fec, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                    cell.setBackgroundColor(new BaseColor(255, 255, 255));
                    cell.setBorderColor(new BaseColor(255, 255, 255));
                    table6.addCell(cell);

                    numRegistro++;

                }
            } catch (SQLException ee) {
                System.out.println(ee);

            }

            if (reg == false) {
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell.setPhrase(new Phrase("", FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                cell.setBackgroundColor(new BaseColor(255, 255, 255));
                cell.setBorderColor(new BaseColor(255, 255, 255));
                table6.addCell(cell);

                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell.setPhrase(new Phrase("", FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                cell.setBackgroundColor(new BaseColor(255, 255, 255));
                cell.setBorderColor(new BaseColor(255, 255, 255));
                table6.addCell(cell);

                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell.setPhrase(new Phrase("", FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                cell.setBackgroundColor(new BaseColor(255, 255, 255));
                cell.setBorderColor(new BaseColor(255, 255, 255));
                table6.addCell(cell);

                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell.setPhrase(new Phrase(String.valueOf(numB), FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
                cell.setBackgroundColor(new BaseColor(51, 51, 51));
                cell.setBorderColor(new BaseColor(51, 51, 51));
                table6.addCell(cell);

                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell.setPhrase(new Phrase("$" + String.valueOf(totalV), FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
                cell.setBackgroundColor(new BaseColor(51, 51, 51));
                cell.setBorderColor(new BaseColor(51, 51, 51));
                table6.addCell(cell);

            }
            table6.setWidthPercentage(110);
            document.add(table6);

            pe = new Paragraph("\n", FontFactory.getFont("Franklin Gothic Demi Cond", 12, Font.BOLD, new BaseColor(0, 0, 0)));
            pe.setAlignment(Element.ALIGN_JUSTIFIED);
            pe.setSpacingAfter(5f);
            document.add(pe);

            img = Image.getInstance(imagePath2);
            img.scalePercent(350, 4);
            img.setAlignment(Image.ALIGN_CENTER);
            //img.setAbsolutePosition(-80, document.getPageSize().getHeight() - img.getScaledHeight() - 178);
            //writer.getDirectContentUnder().addImage(img);
            document.add(img);

            pe = new Paragraph("\nVentas por vendedor\n", FontFactory.getFont("Franklin Gothic Demi Cond", 12, Font.BOLD, new BaseColor(0, 0, 0)));
            pe.setAlignment(Element.ALIGN_JUSTIFIED);
            pe.setSpacingAfter(5f);
            document.add(pe);

            String consulta4 = "SELECT cuentas.usuario AS nombre_vendedor, COUNT(boletos.IDBoletos) AS total_boletos_vendidos, SUM(boletos.precio) AS ganancias_totales FROM venta INNER JOIN cuentas ON venta.vendedor = cuentas.usuario INNER JOIN boletos ON venta.ID = boletos.IDVenta GROUP BY cuentas.usuario ORDER BY cuentas.usuario;";
            PdfPTable table7 = new PdfPTable(4);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("No.", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
            cell.setBackgroundColor(new BaseColor(51, 51, 51));
            cell.setBorderColor(new BaseColor(51, 51, 51));
            table7.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Vendedor", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
            cell.setBackgroundColor(new BaseColor(51, 51, 51));
            cell.setBorderColor(new BaseColor(51, 51, 51));
            table7.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Boletos vendidos", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
            cell.setBackgroundColor(new BaseColor(51, 51, 51));
            cell.setBorderColor(new BaseColor(51, 51, 51));
            table7.addCell(cell);

            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
            cell.setPhrase(new Phrase("Ganancias totales", FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
            cell.setBackgroundColor(new BaseColor(51, 51, 51));
            cell.setBorderColor(new BaseColor(51, 51, 51));
            table7.addCell(cell);

            reg = true;
            numB = 0;
            totalV = 0;
            try {
                int numRegistro = 1;
                ps = (PreparedStatement) con.getConect().prepareStatement(consulta4);
                ResultSet sr = ps.executeQuery();

                while (sr.next()) {
                    String idv = sr.getString("nombre_vendedor");
                    String nven = sr.getString("total_boletos_vendidos");
                    String fec = sr.getString("ganancias_totales");
                    numB += Integer.parseInt(nven);
                    totalV += Float.parseFloat(fec);

                    reg = false;

                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cell.setPhrase(new Phrase(String.valueOf(numRegistro), FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                    cell.setBackgroundColor(new BaseColor(255, 255, 255));
                    cell.setBorderColor(new BaseColor(255, 255, 255));
                    table7.addCell(cell);

                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cell.setPhrase(new Phrase(idv, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                    cell.setBackgroundColor(new BaseColor(255, 255, 255));
                    cell.setBorderColor(new BaseColor(255, 255, 255));
                    table7.addCell(cell);

                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cell.setPhrase(new Phrase(nven, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                    cell.setBackgroundColor(new BaseColor(255, 255, 255));
                    cell.setBorderColor(new BaseColor(255, 255, 255));
                    table7.addCell(cell);

                    cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cell.setPhrase(new Phrase("$" + fec, FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                    cell.setBackgroundColor(new BaseColor(255, 255, 255));
                    cell.setBorderColor(new BaseColor(255, 255, 255));
                    table7.addCell(cell);

                    numRegistro++;

                }
            } catch (SQLException ee) {
                System.out.println(ee);

            }

            if (reg == false) {
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell.setPhrase(new Phrase("", FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                cell.setBackgroundColor(new BaseColor(255, 255, 255));
                cell.setBorderColor(new BaseColor(255, 255, 255));
                table7.addCell(cell);

                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell.setPhrase(new Phrase("", FontFactory.getFont("Franklin Gothic Demi Cond", 9, Font.PLAIN, new BaseColor(0, 0, 0))));
                cell.setBackgroundColor(new BaseColor(255, 255, 255));
                cell.setBorderColor(new BaseColor(255, 255, 255));
                table7.addCell(cell);

                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell.setPhrase(new Phrase(String.valueOf(numB), FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
                cell.setBackgroundColor(new BaseColor(51, 51, 51));
                cell.setBorderColor(new BaseColor(51, 51, 51));
                table7.addCell(cell);

                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell.setPhrase(new Phrase("$" + String.valueOf(totalV), FontFactory.getFont("Franklin Gothic Demi Cond", 10, Font.BOLD, new BaseColor(255, 255, 255))));
                cell.setBackgroundColor(new BaseColor(51, 51, 51));
                cell.setBorderColor(new BaseColor(51, 51, 51));
                table7.addCell(cell);

            }

            table7.setWidthPercentage(110);

            document.add(table7);
            // Cerrar el documento
            document.close();

            System.out.println("PDF con tabla creado con éxito!");
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (DocumentException ex) {
            Logger.getLogger(Reportes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Reportes.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
//constructor of file class having file as argument  
            File file = new File(dest);
            if (!Desktop.isDesktopSupported())//check if Desktop is supported by Platform or not  
            {
                System.out.println("not supported");
                return;
            }
            Desktop desktop = Desktop.getDesktop();
            if (file.exists()) //checks file exists or not  
            {
                desktop.open(file);              //opens the specified file  
            }
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reportes.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reportes.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reportes.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reportes.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reportes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
